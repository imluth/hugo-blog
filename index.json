[{"content":"Infrastructure Overview My personal lab environment runs on a Linode-managed VM, serving as a Docker host for various containerized applications. Here\u0026rsquo;s the core infrastructure stack:\nHost Provider: Linode Docker-managed VM Domain: looth.io (managed through Porkbun) Container Management: Portainer Reverse Proxy: Traefik Version Control: GitHub Architecture Design The setup implements a GitOps-driven workflow, enabling automatic deployments through Portainer\u0026rsquo;s webhook integration with GitHub. This architecture supports rapid development and deployment of containerized applications.\nImplementation Details Development Workflow Local development and testing Containerization with Dockerfile and docker-compose.yml Code push to GitHub repository Automated deployment via Portainer webhooks Deployment Configuration The deployment process leverages Portainer\u0026rsquo;s stack functionality:\nStack configuration points to GitHub repository GitOps functionality enabled in Portainer Webhook URL from Portainer configured in GitHub repository Automatic deployment triggered on every push to the repository Why This Setup? This infrastructure serves as a learning platform for:\nContainer orchestration CI/CD pipeline implementation GitOps practices Microservices architecture DevOps methodologies Future Plans The environment is designed to support deployment and testing of various web applications and services, providing hands-on experience with:\nMicroservices development Container orchestration Automated deployment workflows Infrastructure as Code Application scaling Conclusion This setup provides a robust foundation for experimenting with modern DevOps practices and containerized application deployment, making it an ideal environment for learning and testing new technologies.\n","permalink":"https://looth.io/posts/prod-ready-docker-lab/","summary":"Infrastructure Overview My personal lab environment runs on a Linode-managed VM, serving as a Docker host for various containerized applications. Here\u0026rsquo;s the core infrastructure stack:\nHost Provider: Linode Docker-managed VM Domain: looth.io (managed through Porkbun) Container Management: Portainer Reverse Proxy: Traefik Version Control: GitHub Architecture Design The setup implements a GitOps-driven workflow, enabling automatic deployments through Portainer\u0026rsquo;s webhook integration with GitHub. This architecture supports rapid development and deployment of containerized applications.","title":"Building a Production-Ready Docker Environment with CI/CD Pipeline"},{"content":"Introduction I\u0026rsquo;m a System Administrator venturing into the world of DevOps, and this blog will document my learning journey. As someone who\u0026rsquo;s spent time managing traditional infrastructure, I\u0026rsquo;m excited to share my experiences as I explore modern DevOps practices and tools.\nWhat to Expect This blog will focus on practical tutorials and real-world examples covering:\nContainer orchestration with Docker and Kubernetes Automation with Ansible CI/CD pipelines using Jenkins Version control with GitHub Infrastructure as Code Cloud platforms and services I believe in learning by doing, so each post will include hands-on examples and practical implementations. Whether you\u0026rsquo;re a fellow SysAdmin looking to transition into DevOps or someone interested in automation and modern infrastructure, I hope you\u0026rsquo;ll find value in my documentation.\nStay tuned for my first technical post about setting up a basic CI/CD pipeline!\n","permalink":"https://looth.io/posts/welcome-post/","summary":"Introduction I\u0026rsquo;m a System Administrator venturing into the world of DevOps, and this blog will document my learning journey. As someone who\u0026rsquo;s spent time managing traditional infrastructure, I\u0026rsquo;m excited to share my experiences as I explore modern DevOps practices and tools.\nWhat to Expect This blog will focus on practical tutorials and real-world examples covering:\nContainer orchestration with Docker and Kubernetes Automation with Ansible CI/CD pipelines using Jenkins Version control with GitHub Infrastructure as Code Cloud platforms and services I believe in learning by doing, so each post will include hands-on examples and practical implementations.","title":"Welcome to My DevOps Journey"},{"content":"ðŸ‘‹ Hi, I\u0026rsquo;m Looth Ibrahim I\u0026rsquo;m a DevOps Engineer and System Administrator specializing in infrastructure automation, cloud technologies, and system optimization. With a strong foundation in Linux/Unix administration and a passion for DevOps practices, I work on bridging the gap between development and operations to create efficient, scalable systems.\nðŸ”§ Technical Skills Infrastructure as Code: Terraform, CloudFormation, Ansible Containerization \u0026amp; Orchestration: Docker, Kubernetes CI/CD: Jenkins, GitLab CI, GitHub Actions Cloud Platforms: AWS, Azure, GCP Operating Systems: Linux (RHEL, Ubuntu, CentOS), Unix Version Control: Git, GitHub, GitLab Monitoring \u0026amp; Logging: Prometheus, Grafana, ELK Stack Scripting: Bash, Python, PowerShell Security: InfoSec best practices, Security automation ðŸ’¼ What I Do Design and implement CI/CD pipelines Manage and automate cloud infrastructure Optimize system performance and reliability Implement security best practices Develop infrastructure automation solutions Support and maintain production environments Collaborate with development teams to improve deployment processes ðŸŒ± Interests I\u0026rsquo;m passionate about:\nInfrastructure automation Cloud-native technologies GitOps practices System security Open-source technologies Continuous learning and improvement ðŸ“« Connect With Me Feel free to reach out:\nGitHub: imluth LinkedIn: loothibrahim Twitter: @im_root Email: hello@looth.xyz ðŸš€ Recent Projects I regularly work on various projects involving:\nInfrastructure automation Container orchestration Deployment pipelines Monitoring solutions Security automation I\u0026rsquo;m always interested in collaborating on interesting projects or discussing DevOps practices. Feel free to reach out!\n","permalink":"https://looth.io/about/","summary":"ðŸ‘‹ Hi, I\u0026rsquo;m Looth Ibrahim I\u0026rsquo;m a DevOps Engineer and System Administrator specializing in infrastructure automation, cloud technologies, and system optimization. With a strong foundation in Linux/Unix administration and a passion for DevOps practices, I work on bridging the gap between development and operations to create efficient, scalable systems.\nðŸ”§ Technical Skills Infrastructure as Code: Terraform, CloudFormation, Ansible Containerization \u0026amp; Orchestration: Docker, Kubernetes CI/CD: Jenkins, GitLab CI, GitHub Actions Cloud Platforms: AWS, Azure, GCP Operating Systems: Linux (RHEL, Ubuntu, CentOS), Unix Version Control: Git, GitHub, GitLab Monitoring \u0026amp; Logging: Prometheus, Grafana, ELK Stack Scripting: Bash, Python, PowerShell Security: InfoSec best practices, Security automation ðŸ’¼ What I Do Design and implement CI/CD pipelines Manage and automate cloud infrastructure Optimize system performance and reliability Implement security best practices Develop infrastructure automation solutions Support and maintain production environments Collaborate with development teams to improve deployment processes ðŸŒ± Interests I\u0026rsquo;m passionate about:","title":"About Me"}]